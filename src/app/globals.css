:root {
  --font-mono: ui-monospace, Menlo, Monaco, 'Cascadia Mono', 'Segoe UI Mono',
    'Roboto Mono', 'Oxygen Mono', 'Ubuntu Monospace', 'Source Code Pro',
    'Fira Mono', 'Droid Sans Mono', 'Courier New', monospace;

  --black: #141414;
  --dark-blue: #103494;
  --light-blue: #a3b9f5;
  --blue: #7e9df1;
  --yellow: #ffd700;
  --orange: #f94c08;
  --light-orange: #fbb99d;
  --background-white: #f5f5f5;
  --background-disabled: #dddddd;
  --blue-disabled: #889ac4;
  --red: #fb4b4b;
  --light-red: #fd8787;
  --green: #4cb852;
  --light-green: #8ad08e;
  --dark-gray: #666666;
  --gray: #a2a2a2;
  --light-gray: #cccccc;
  --black-gradient: linear-gradient(to bottom, #666666, #f5f5f5, #f5f5f5) 0% 50%;
  --white-gradient: linear-gradient(
    90deg,
    rgba(16, 52, 148, 1) 0%,
    rgba(245, 245, 245, 1) 50%,
    rgba(16, 52, 148, 1) 100%
  );
  --blue-gradient: linear-gradient(
    90deg,
    rgba(255, 255, 255, 0) 0%,
    rgba(16, 52, 148, 1) 50%,
    rgba(255, 255, 255, 0) 100%
  );
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

*::-webkit-scrollbar {
  width: 17px;
}

*::-webkit-scrollbar-track {
  background: var(--dark-blue);
}

*::-webkit-scrollbar-thumb {
  background-color: var(--background-white);
  border-radius: 100vw;
  border: 3px solid var(--dark-blue);
}

::-webkit-scrollbar-thumb:hover {
  background-color: var(--light-orange);
}

html {
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
}

html,
body {
  max-width: 100vw;
  overflow-x: hidden;
}

/* Global DOM Styles */
main {
  display: grid;
  grid-template-rows: 100px 1fr 100px;
  grid-template-columns: 1fr;
  min-height: 100vh;
  background-color: var(--dark-blue);
}

h1,
h4,
h5 {
  color: var(--dark-blue);
  text-align: center;
}

h2,
h3 {
  color: var(--background-white);
}

p {
  color: var(--black);
}

/* !! Global Class Styles */

/* Page Header Styles */
.pageHeader {
  grid-row: 1;
  grid-column: span 2;
  background-color: var(--background-white);
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  align-content: center;
  align-items: center;
}

.pageHeader button,
.pageHeader .button {
  border: none;
  background: none;
  flex-grow: 0;
  justify-self: flex-start;
  margin-left: 2em;
  color: var(--dark-blue);
  font-size: 1.5em;
}

.pageHeader button:hover,
.pageHeader .button:hover {
  background-color: transparent;
  color: var(--light-blue);
}

.avatarBox {
  display: flex;
  flex-flow: row-reverse nowrap;
  gap: 0.75em;
  justify-content: center;
  align-items: center;
  justify-self: flex-end;
  margin-right: 2em;
}

.avatarBox p {
  color: var(--dark-blue);
}

.avatar {
  display: flex;
  width: 35px;
  height: 35px;
  justify-content: center;
  align-items: center;
}

.avatar img {
  max-width: 100%;
  height: auto;
}

/* Global Card Styles */
.inputForm {
  display: grid;
  gap: 1em;
  margin: 1vw;
  align-content: flex-start;
}

.card {
  display: grid;
  background-color: var(--background-white);
  border-radius: 1em;
  padding: 0.75em;
}

.card header {
  background-color: var(--dark-blue);
  width: 100%;
  border-radius: 0.5em 0.5em 0 0;
  padding: 0.25em;
  text-align: center;
  margin-bottom: 0.5em;
  max-height: 31px;
}

.card h4 {
  justify-self: flex-start;
  margin-block: 1em 0em;
}

.small {
  font-size: 0.65em;
  align-self: center;
}

.hidden {
  display: none !important;
}

.radioGroup {
  accent-color: var(--dark-blue);
  display: flex;
  gap: 1em;
  border: none;
  background-color: rgba(0, 0, 0, 0.1);
  padding: 0.5em;
  border-radius: 0.5em;
  align-self: center;
  font-size: 11px;
  width: 100%;
}

.radioGroup div {
  display: flex;
  flex-flow: column nowrap;
  margin: auto;
}

.checkboxGroup {
  margin: 10px 0;
}

.reliteGroup {
  border: none;
  background-color: rgba(0, 0, 0, 0.1);
  padding: 0.5em;
  border-radius: 0.5em;
  align-self: center;
  width: 100%;
  margin-bottom: 1em;
}

.alignTop {
  align-items: flex-start !important;
}

.alignBottom {
  align-items: flex-end !important;
}

.center {
  align-self: center !important;
  justify-self: center !important;
  text-align: center !important;
}

.right {
  align-self: right !important;
  justify-self: right !important;
  text-align: right !important;
}

.openWallNote {
  margin: 0.25em auto 0 auto !important;
}

.cardInput {
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  gap: 0.25em;
  padding: 0.25em;
}

.cardInput:has(button.icon) {
  min-height: 64px;
}

.cardInput:has(label.offOnTablet),
.cardInput:has(label.offOnDesktop) {
  min-height: 36px;
}

.cardInput label,
.cardLabel {
  align-items: flex-end;
  justify-content: space-between;
  display: flex;
  min-height: 30px;
}

.cardInput.row {
  display: flex;
  flex-flow: row-reverse;
  align-items: flex-end;
  justify-content: left;
}

.cardInput.row label {
  padding-left: 10px;
  align-self: center;
  align-items: center;
}

.cardInput.row .sliderGrid {
  max-width: 100px;
}

.cardButton {
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  gap: 0.25em;
}

.projInput {
  flex-flow: row nowrap;
  align-items: center;
  gap: 1em;
}

.cardRow {
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
  gap: 0.25em;
  padding: 0.25em;
}

.cardRow input {
  line-height: 1.75em;
  border-radius: 0.25em;
  border: none;
  outline: 1px solid var(--black);
  padding-left: 0.25em;
}

.cardRow input:focus {
  outline: 1px solid var(--orange);
}

input[type='text'] {
  line-height: 1.75em;
  border-radius: 0.25em;
  border: none;
  outline: 1px solid var(--dark-gray);
  padding-left: 0.25em;
  transition: all 0.3s ease;
}

input[type='text']:focus {
  outline: 1px solid var(--blue);
}

input[type='text']:disabled {
  color: var(--dark-gray);
  background-color: var(--light-gray);
}

input[type='checkbox']:disabled + label {
  color: var(--dark-gray);
}

select {
  height: 1.75em;
  border-radius: 0.25em;
  border: none;
  outline: 1px solid var(--dark-gray);
  padding-left: 0.25em;
  transition: all 0.3s ease;
}

select:disabled {
  color: var(--dark-gray);
  background-color: var(--light-gray);
}

select option:disabled {
  color: var(--dark-gray);
  background-color: var(--light-gray);
}

.checkRow {
  font-size: 0.75em;
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  gap: 1em;
  align-self: center;
  accent-color: var(--dark-blue);
  margin-left: 0.25em;
}

.divider {
  margin-block: 0.5em;
  height: 1px;
  background: var(--blue-gradient);
}

.divider.white {
  margin-block: 0.5em;
  height: 1px;
  background: var(--white-gradient);
}

.spacer {
  margin-top: 10px;
}

.column {
  flex-flow: row nowrap;
  align-items: center;
  justify-content: center;
  justify-self: center;
}

.column input,
.column input:focus {
  outline: none;
}

.tabsContainer {
  width: 100%;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* Internet Explorer 10+ */
}

.tabsContainer::-webkit-scrollbar {
  display: none; /* WebKit */
}

.tabList {
  display: flex;
  border-bottom: 1px solid var(--dark-gray);
  min-width: max-content;
  gap: 4px;
}

.tab {
  padding: 8px 16px;
  border: 1px solid var(--dark-gray);
  border-radius: 0.25em 0.25em 0 0;
  background: var(--background-disabled);
  cursor: pointer;
  color: var(--dark-gray);
  font-size: 14px;
  font-weight: 600;
  white-space: nowrap;
  flex-shrink: 0;
  margin-bottom: -1px;
}

.activeTab {
  border-bottom: none;
  background: var(--background-white);
  color: var(--dark-blue);
  cursor: default;
}

.tabContent {
  padding-top: 16px;
  border-width: 1px;
  border-style: solid;
  border-image: var(--black-gradient);
  border-top: 0;
}

.activeRow {
  background-color: var(--background-disabled);
  border: 1px solid var(--light-gray);
  border-radius: 4px;
}

.error {
  border-color: var(--red) !important;
  outline: 1px solid var(--red) !important;
}

.errorMsg {
  position: relative;
  margin-top: -4px;
}

.errorMsg p {
  position: absolute;
  top: 8px;
  font-size: 0.8em;
  border: 1px solid var(--light-red);
  border-radius: 0.5em;
  background-color: var(--light-red);
  padding: 0.5em;
  z-index: 99;
  /* box-shadow: var(--dark-gray) 2px 2px 3px; */
}

.errorMsg p::after {
  content: '';
  position: absolute;
  bottom: 100%;
  left: 50%;
  margin-left: -8px;
  border-width: 8px;
  border-style: solid;
  border-color: transparent transparent var(--light-red) transparent;
}

/* Global Button Classes */
button,
.button {
  cursor: pointer;
  border: none;
  border-radius: 0.5em;
  padding: 1em;
  text-decoration: none;
  color: var(--background-white);
  transition: all 0.3s ease;
}

button.addRow,
.button.addRow {
  width: 5em;
  min-height: 30px;
  max-height: 42px;
  margin: 0.25em;
  padding: 0.5em;
}

button.deleteRow,
.button.deleteRow {
  margin: 2px;
}

button.prim,
.button.prim {
  background-color: var(--dark-blue);
}

button.prim:hover,
button.prim:hover {
  background-color: var(--light-blue);
}

button.sec,
.button.sec {
  background-color: var(--light-blue);
}

button.sec:hover,
button.sec:hover {
  background-color: var(--blue);
}

button.accent,
.button.accent {
  background-color: var(--orange);
}

button.accent:hover,
button.accent:hover {
  background-color: var(--light-orange);
}

button.success,
.button.success,
.success {
  background-color: var(--green);
}

button.success:hover,
button.success:hover {
  background-color: var(--light-green);
}

button.reject,
.button.reject,
.reject {
  background-color: var(--red);
}

button.reject:hover,
button.reject:hover {
  background-color: var(--light-red);
}

button.nuetral,
.button.nuetral {
  background-color: var(--gray);
}

button.nuetral:hover,
button.nuetral:hover {
  background-color: var(--light-gray);
}

.icon {
  border-color: transparent;
  width: 2em;
  height: 2em;
  font-size: 1em;
  padding: 0;
  border-radius: 0.5em;
  justify-self: flex-end;
  align-self: flex-end;
  background: none;
  transition: all 0.3s ease;
}

.icon.prim {
  background-color: transparent;
  color: var(--dark-blue);
}

.icon.prim:hover {
  background-color: var(--dark-blue);
  color: var(--background-white);
}

.icon.sec {
  background-color: transparent;
  color: var(--light-blue);
}

.icon.sec:hover {
  background-color: var(--light-blue);
  color: var(--background-white);
}

.icon.accent {
  background-color: transparent;
  color: var(--orange);
}

.icon.accent:hover {
  background-color: var(--orange);
  color: var(--background-white);
}

.icon.success {
  background-color: transparent;
  color: var(--green);
}

.icon.success:hover {
  background-color: var(--green);
  color: var(--background-white);
}

.icon.reject {
  background-color: transparent;
  color: var(--red);
}

.icon.reject:hover {
  background-color: var(--red);
  color: var(--background-white);
}

.icon.nuetral {
  background-color: transparent;
  color: var(--gray);
}

.icon.nuetral:hover {
  background-color: var(--gray);
  color: var(--background-white);
}

.icon.info {
  background-color: transparent;
  color: var(--blue);
  margin-bottom: -6px;
  cursor: default;
}

.tooltip {
  position: relative;
}

label:has(.tooltip.left) {
  justify-content: flex-start;
}

.tooltip p {
  position: absolute;
  top: 26px;
  right: 30px;
  visibility: hidden;
  font-size: 0.8em;
  border: 1px solid var(--light-gray);
  border-radius: 0.5em;
  background-color: rgba(204, 204, 204, 0.75);
  white-space: nowrap;
  padding: 0.5em;
  z-index: 99;
  transition: all 0.3s ease;
}

.tooltip.left p {
  right: unset;
  left: 30px;
}

.tooltip:hover p {
  visibility: visible;
}

.icon.actionButton {
  font-size: 1em;
  border: none;
  border-radius: 5px;
  color: var(--background-white);
  transition: all ease 0.3s;
  aspect-ratio: 1 /1;
  width: 35px;
  height: 35px;
}

.icon.actionButton.prim {
  background: var(--dark-blue);
}

.icon.actionButton.prim:hover {
  background: var(--light-blue);
}

.icon.actionButton.sec {
  background: var(--light-blue);
}

.icon.actionButton.sec:hover {
  background: var(--blue);
}

.icon.actionButton.accent {
  background: var(--orange);
}

.icon.actionButton.accent:hover {
  background: var(--light-orange);
}

.icon.actionButton.success {
  background: var(--green);
}

.icon.actionButton.success:hover {
  background: var(--light-green);
}

.icon.actionButton.reject {
  background: var(--light-red);
}

.icon.actionButton.reject:hover {
  background: var(--red);
}

.icon.actionButton.nuetral {
  background: var(--gray);
}

.icon.actionButton.nuetral:hover {
  background: var(--light-gray);
}

.buttonFooter {
  /* border-top: 1px solid var(--dark-blue); */
  text-align: center;
  padding-top: 8px;
}

.addButton {
  color: var(--background-white);
  background-color: var(--dark-blue);
  border: none;
  border-radius: 50%;
  width: 2em;
  height: 2em;
  font-size: 1.25em;
  align-self: center;
  padding: 0;
}

/* Global Dialog Styles */

.dialog-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
}

.dialog-content {
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  gap: 0.75em;
  background-color: var(--background-white);
  color: var(--black);
  padding: 1em 3em 3em 3em;
  border-radius: 10px;
}

.dialog-content ul {
  display: flex;
  gap: 0.75em;
  list-style-type: none;
}

.dialog-title {
  text-align: center;
}

.dialog-buttons {
  display: flex;
  width: 100%;
  justify-content: space-around;
}

.dialog-content:has(.buttonGroup) {
  align-items: flex-start;
  padding: 1em 3em;
}

.dialog-content:has(.buttonGroup) h3 {
  color: var(--dark-blue);
  align-self: center;
}

.dialog-content .buttonGroup {
  display: flex;
  gap: 2px;
  flex-wrap: wrap;
  max-width: 500px;
}

.dialog-content .buttonWrapper {
  padding: 4px;
}

.dialog-content .buttonWrapper.selected {
  padding: 2px;
  border: 2px solid var(--dark-blue);
  border-radius: 8px;
}

.dialog-content .buttonGroup button {
  min-width: 40px;
  min-height: 40px;
  border: 1px solid var(--gray);
  border-radius: 6px;
  font-size: 12px;
}

/* Global Toggle Styles */

.toggleGroup {
  margin: 10px 0 0 0;
}

.toggleGroup.large label {
  font-size: 15px;
  min-height: 20px;
}

.toggle {
  display: flex;
  gap: 8px;
  align-items: center;
  margin-left: 8px;
}

.toggle:has(.wrapper.right) {
  margin-left: auto;
}

.toggle .wrapper {
  display: flex;
  background-color: var(--gray);
  position: relative;
  width: 40px;
  height: 20px;
  min-height: 20px;
  border-radius: 10px;
  transition: 300ms;
}

.toggle label {
  cursor: pointer;
  font-size: 12px;
  min-height: 15px;
}

.toggle input {
  visibility: hidden;
}

.toggle input + .toggleButton {
  background-color: var(--background-white);
  position: absolute;
  top: 2px;
  left: 2px;
  width: 16px;
  height: 16px;
  border-radius: 9px;
  transition: 300ms;
}

.toggle input:checked + .toggleButton {
  left: 22px;
  transition: 300ms;
}

.toggle .wrapper:has(input:checked),
.toggle .wrapper.prim:has(input:checked) {
  background-color: var(--dark-blue);
  transition: 300ms;
}

.toggle .wrapper.sec:has(input:checked) {
  background-color: var(--blue);
}

.toggle .wrapper.accent:has(input:checked) {
  background-color: var(--orange);
}

.toggle .wrapper.success:has(input:checked) {
  background-color: var(--green);
}

.toggle .wrapper.reject:has(input:checked) {
  background-color: var(--red);
}

.toggle .wrapper.nuetral:has(input:checked) {
  background-color: var(--dark-gray);
}

/* Global Card Styles */

.backButton {
  color: var(--dark-blue);
  align-self: flex-start;
  font-size: 1.5em;
}

.image {
  width: 50vw;
  max-width: 280px;
  min-width: 200px;
  height: auto;
}

.panelImage {
  align-self: center;
  height: auto;
  width: 90%;
  max-width: 280px;
  justify-self: center;
  position: relative;
}

.imageOverlay {
  position: absolute;
  bottom: -12px;
  left: 50%;
  transform: translate(-50%);
  background-color: rgba(54, 101, 148, 0.5);
  border-radius: 4px;
  padding: 2px 8px;
  color: var(--black);
  white-space: nowrap;
}

/* Global Utility Styles */

.black {
  color: var(--black);
}

.white {
  color: var(--background-white);
}

.projectCard {
  display: grid;
  background-color: var(--background-white);
  align-content: center;
  justify-items: center;
  gap: 1em;
  justify-self: center;
  align-self: center;
  flex-grow: 0;
  /* width: 25em; */
  border-radius: 1em;
  padding: 0.75em;
}

/* Building Sketch Styles */
.sketchButtonContainer {
  display: flex;
  width: 100%;
  justify-content: space-between;
  margin-top: 10px;
}

.sketchButton {
  aspect-ratio: 1 /1;
  padding: 0.35em;
  border: none;
  background-color: var(--dark-blue);
  border-radius: 0.25em;
  border: var(--background-white);
  color: var(--background-white);
  min-width: 38px;
}

/* Hides the autocomplete google logo */
.pac-container:after {
  background-image: none !important;
  height: 0px;
}

/* Grid Layout */
.grid,
.grid2,
.grid3,
.grid4,
.grid6,
.grid8,
.tableGrid5,
.tableGrid6,
.tableGrid7,
.tableGrid8,
.tableGrid9,
.tableGrid10 {
  display: grid;
  grid-template-columns: 1fr;
  gap: 0 0.5em;
  align-items: flex-end;
  justify-content: center;
}

.span2,
.span3,
.span4,
.span5,
.span6,
.span7,
.span8 {
  grid-column: span 1;
}

.panelGrid {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: repeat(5, 1fr);
  gap: 0 0.5em;
  align-items: flex-end;
  justify-content: center;
}

.panelGrid .panelType {
  grid-column: 1;
  grid-row: 3;
}

.panelGrid .panelGauge {
  grid-column: 1;
  grid-row: 4;
}

.panelGrid .panelFinish {
  grid-column: 1;
  grid-row: 5;
}

.panelGrid .panelImage {
  grid-column: 1;
  grid-row: 1 / 3;
}

.panelGrid:has(div.openWall) {
  grid-template-rows: 1fr;
}

.sliderLeftButton {
  font-size: 15px;
  padding: 2px;
  border: 1px solid var(--dark-gray);
  border-radius: 5px 0 0 5px;
  color: var(--background-white);
  align-self: flex-end;
  background: var(--light-gray);
  aspect-ratio: 1 /1;
  width: 28px;
}

.sliderRightButton {
  font-size: 15px;
  padding: 2px;
  border: 1px solid var(--dark-gray);
  border-radius: 0 5px 5px 0;
  color: var(--background-white);
  align-self: flex-end;
  background: var(--light-gray);
  aspect-ratio: 1 /1;
  width: 28px;
}

.sliderGrid {
  display: grid;
  grid-template-columns: 28px minmax(44px, 1fr) 28px;
  gap: 0;
  /* align-items: flex-end; */
}

.sliderGrid div {
  padding: 0;
  min-height: unset;
}

.sliderGrid label {
  display: block;
  text-align: center;
  min-height: unset;
}

.sliderGrid input {
  border-radius: 0 !important;
  text-align: center;
  height: 26px;
}

.sliderGrid.blue input {
  height: 28px;
}

.sliderGrid.blue button {
  border: 1px solid var(--light-blue);
}

.sliderGrid.blue button:disabled {
  border: 1px solid var(--background-white);
}

.onPhone,
.onTablet,
.onLaptop,
.onDesktop,
.hideWithSidebar {
  display: none;
}

.toast {
  position: relative;
  bottom: 0;
  display: flex;
  justify-content: center;
}

.toastContent {
  /* background-color: var(--green); */
  height: 5rem;
  color: var(--background-white);
  padding: 0.75em 1.5em 1.5em 1.5em;
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
  gap: 0.5em;
  border-radius: 2em;
}

.toastContent h3 {
  font-size: 1.25rem;
}

.toastContent p {
  color: var(--background-white);
  font-size: 0.75rem;
}

/* Loading Animation */
.rotate {
  color: var(--dark-blue);
  font-size: 1.5em;
  animation: spinner 1s linear infinite;
}

@keyframes spinner {
  to {
    transform: rotate(360deg);
  }
}

/* END */

/*
.showWithSidebar, .hideWithSidebar = 1000px

.onPhone,   .offOnPhone   =  550px
.onTablet,  .offOnTablet  =  768px
.onLaptop,  .offOnLaptop  = 1200px
.onDesktop, .offOnDesktop = 1500px
*/
@media screen and (min-width: 350px) {
  .cardInput label,
  .cardInput input,
  .cardInput select,
  .cardRow label,
  .cardRow input,
  .cardRow select,
  .checkRow.large {
    font-size: 3.15vw;
  }

  .radioGroup {
    font-size: 3.15vw;
  }

  .sliderGrid input {
    font-size: 15px;
    padding: 0;
  }
}

@media screen and (min-width: 476px) {
  .radioGroup {
    font-size: 15px;
  }
}

@media screen and (min-width: 550px) {
  .offOnPhone {
    display: none !important;
  }

  .onPhone {
    display: block;
  }

  .pageHeaderLeft {
    font-size: 1.25em;
  }

  .pageHeaderRight {
    font-size: 0.75em;
  }

  .cardInput label,
  .cardInput input,
  .cardInput select,
  .cardRow label,
  .cardRow input,
  .cardRow select,
  .checkRow.large {
    font-size: 15px;
  }

  /* Grid Layout */
  .grid2 {
    grid-template-columns: repeat(2, 1fr);
  }

  .grid2 .span2 {
    grid-column: span 2;
  }

  .grid2:has(.panelGrid) {
    grid-template-columns: 1fr;
  }

  .grid2 .grid2 {
    grid-template-columns: 1fr;
  }

  .grid2 .grid2 .span2 {
    grid-column: span 1;
  }

  .grid4 {
    grid-template-columns: repeat(2, 1fr);
  }

  .grid4:has(.panelGrid) {
    grid-template-columns: minmax(40px, 1fr);
  }

  .grid4 .span2,
  .grid4 .span3 {
    grid-column: span 1;
  }

  .grid4 .divider.span2,
  .grid4 .divider.span3,
  .grid4 .divider.span4 {
    grid-column: span 2;
  }

  .grid4:has(.panelGrid) .divider.span2,
  .grid4:has(.panelGrid) .divider.span4 {
    grid-column: span 1;
  }

  .tableGrid5 {
    grid-template-columns: repeat(2, 1fr);
  }

  .tableGrid5 button.deleteRow {
    grid-column: span 2;
  }

  .grid6 {
    grid-template-columns: repeat(2, 1fr);
  }

  .tableGrid6 {
    grid-template-columns: repeat(2, 1fr);
  }

  .grid6 .span2,
  .grid6 .span4,
  .grid6 .span5 {
    grid-column: span 2;
  }

  .tableGrid7 {
    grid-template-columns: repeat(2, 1fr);
  }

  .tableGrid7 button.deleteRow {
    grid-column: span 2;
  }

  .grid8 {
    grid-template-columns: repeat(2, 1fr);
  }

  .tableGrid8 {
    grid-template-columns: repeat(2, 1fr);
  }

  .tableGrid10 {
    grid-template-columns: repeat(3, 1fr);
  }

  .tableGrid10 button.deleteRow {
    grid-column: span 3;
  }

  .grid8 .span5,
  .grid8 .span6,
  .grid8 .span7 {
    grid-column: span 2;
  }
}

@media screen and (min-width: 768px) {
  .offOnTablet {
    display: none !important;
  }

  .onTablet {
    display: block;
  }

  /* Grid Layout */
  .grid3 {
    grid-template-columns: repeat(3, 1fr);
  }

  .grid3 .span2 {
    grid-column: span 2;
  }

  .grid4 .divider.onTablet {
    grid-column: span 2;
  }

  .grid4:has(.panelGrid) {
    grid-template-columns: repeat(2, 1fr);
  }

  .grid4:has(.panelGrid) .divider.span2,
  .grid4:has(.panelGrid) .divider.span4 {
    grid-column: span 2;
  }

  .tableGrid5 {
    grid-template-columns: repeat(4, minmax(60px, 1fr)) 30px;
  }

  .tableGrid5 button.deleteRow {
    grid-column: span 1;
  }

  .grid6 {
    grid-template-columns: repeat(6, minmax(60px, 1fr));
  }

  .grid6 div,
  .grid6 .span2 {
    grid-column: span 2;
  }

  .tableGrid6 {
    grid-template-columns: repeat(5, minmax(60px, 1fr)) 30px;
  }

  .grid6 .span3 {
    grid-column: span 3;
  }

  .grid6 .span4 {
    grid-column: span 4;
  }

  .grid6 .span5 {
    grid-column: span 6;
  }

  .tableGrid7 {
    grid-template-columns: repeat(6, minmax(60px, 1fr)) 30px;
  }

  .tableGrid7 button.deleteRow {
    grid-column: span 1;
  }

  .panelGrid {
    display: grid;
    grid-template-columns: 1fr 1fr 2fr;
    grid-template-rows: 1fr 1fr;
    gap: 0 0.5em;
    align-items: flex-end;
    justify-content: center;
  }

  .panelGrid .panelType {
    grid-column: 1 / span 2;
    grid-row: 1;
  }

  .panelGrid .panelGauge {
    grid-column: 1;
    grid-row: 2;
  }

  .panelGrid .panelFinish {
    grid-column: 2;
    grid-row: 2;
  }

  .panelGrid .panelImage {
    grid-column: 3 / 4;
    grid-row: 1 / 3;
  }

  .grid4 .panelGrid {
    display: grid;
    grid-template-columns: minmax(60px, 1fr);
    grid-template-rows: repeat(5, 1fr);
    gap: 0 0.5em;
    align-items: flex-end;
    justify-content: center;
  }

  .grid4 .panelGrid .panelType {
    grid-column: 1;
    grid-row: 3;
  }

  .grid4 .panelGrid .panelGauge {
    grid-column: 1;
    grid-row: 4;
  }

  .grid4 .panelGrid .panelFinish {
    grid-column: 1;
    grid-row: 5;
  }

  .grid4 .panelGrid .panelImage {
    grid-column: 1;
    grid-row: 1 / 3;
  }
}

@media screen and (min-width: 1000px) {
  main {
    grid-template-columns: 350px 1fr;
    grid-template-rows: 100px 1fr;
  }

  .hideWithSidebar {
    display: block;
  }

  .showWithSidebar {
    display: none !important;
  }

  .inputForm {
    margin-right: 0.5em;
  }

  /* Grid Layout */
  .grid4 {
    /*grid-template-columns: repeat(4, 1fr);*/
    grid-template-columns: repeat(4, minmax(140px, 1fr));
  }

  .grid4 .grid {
    grid-template-columns: minmax(140px, 1fr);
  }

  .grid4:has(.panelGrid) {
    grid-template-columns: repeat(2, 1fr);
  }

  .grid4 .span2 {
    grid-column: span 2;
  }

  .grid4 .span3 {
    grid-column: span 3;
  }

  .grid4 .span2:has(.panelGrid) {
    grid-column: span 1;
  }

  .grid4 .divider.span4 {
    grid-column: span 4;
  }
}

@media screen and (min-width: 1200px) {
  .offOnLaptop {
    display: none !important;
  }

  .onLaptop {
    display: block;
  }

  /* Grid Layout */
  .grid2:has(.panelGrid) {
    grid-template-columns: repeat(2, 1fr);
  }

  .grid2 .grid2 {
    grid-template-columns: repeat(2, 1fr);
  }

  .grid2 .grid2 .span2 {
    grid-column: span 2;
  }

  .tableGrid5 {
    grid-template-columns: repeat(4, minmax(80px, 1fr)) 30px;
  }

  .grid6 {
    /*grid-template-columns: repeat(6, 1fr);*/
    grid-template-columns: repeat(6, minmax(80px, 1fr));
  }

  .grid6 div {
    grid-column: span 1;
  }

  .tableGrid6 {
    grid-template-columns: repeat(5, minmax(80px, 1fr)) 30px;
  }

  .grid6 .span2 {
    grid-column: span 2;
  }

  .grid6 .span3 {
    grid-column: span 3;
  }

  .grid6 .span4 {
    grid-column: span 4;
  }

  .grid6 .span5 {
    grid-column: span 5;
  }

  .tableGrid7 {
    grid-template-columns: repeat(6, minmax(80px, 1fr)) 30px;
  }

  .grid8 {
    /*grid-template-columns: repeat(4, 1fr);*/
    grid-template-columns: repeat(4, minmax(180px, 1fr));
  }

  .tableGrid8 {
    grid-template-columns: repeat(4, minmax(180px, 1fr));
  }

  .tableGrid9 {
    grid-template-columns: repeat(5, minmax(120px, 1fr));
  }

  .tableGrid9 button.deleteRow {
    grid-column: span 2;
  }

  .tableGrid10 {
    grid-template-columns: repeat(5, minmax(120px, 1fr));
  }

  .tableGrid10 button.deleteRow {
    grid-column: span 1 !important;
  }

  .grid8 .span2 {
    grid-column: span 1;
  }

  .grid8 .span3,
  .grid8 .span4 {
    grid-column: span 2;
  }

  .grid8 .span5,
  .grid8 .span6 {
    grid-column: span 3;
  }

  .grid8 .span7 {
    grid-column: span 4;
  }
}

@media screen and (min-width: 1500px) {
  .offOnDesktop {
    display: none !important;
  }

  .onDesktop {
    display: block;
  }

  /* Grid Layout */
  .grid4:has(.panelGrid) {
    grid-template-columns: repeat(4, minmax(140px, 1fr));
  }

  .grid8 {
    /*grid-template-columns: repeat(8, 1fr);*/
    grid-template-columns: repeat(8, minmax(120px, 1fr));
  }

  .tableGrid8 {
    grid-template-columns: repeat(7, minmax(120px, 1fr)) 30px;
  }

  .tableGrid9 {
    grid-template-columns: repeat(8, minmax(20px, 1fr)) 30px;
  }

  .tableGrid9 button.deleteRow {
    grid-column: span 1;
  }

  .tableGrid10 {
    grid-template-columns: repeat(9, minmax(20px, 1fr)) 30px;
  }

  .span2 {
    grid-column: span 2 !important;
  }

  .span3 {
    grid-column: span 3 !important;
  }

  .span4 {
    grid-column: span 4 !important;
  }

  .span5 {
    grid-column: span 5 !important;
  }

  .span6 {
    grid-column: span 6 !important;
  }

  .span7 {
    grid-column: span 7 !important;
  }

  .span8 {
    grid-column: span 8 !important;
  }

  .tableGrid5 button.deleteRow {
    grid-column: span 1 !important;
  }

  .tableGrid7 button.deleteRow {
    grid-column: span 1 !important;
  }

  .tableGrid9 button.deleteRow {
    grid-column: span 1 !important;
  }
}
