:root {   
  --font-mono: ui-monospace, Menlo, Monaco, 'Cascadia Mono', 'Segoe UI Mono',
      'Roboto Mono', 'Oxygen Mono', 'Ubuntu Monospace', 'Source Code Pro',
      'Fira Mono', 'Droid Sans Mono', 'Courier New', monospace;

  --black: #141414;
  --dark-blue: #103494;
  --light-blue: #A3B9F5;
  --blue: #7E9DF1;
  --orange: #F94C08;
  --light-orange: #FBB99D;
  --background-white: #F5F5F5;
  --background-disabled: #DDDDDD;
  --blue-disabled: #889AC4;
  --red: #FB4B4B;
  --light-red: #FD8787;
  --green: #4CB852;
  --light-green: #8AD08E;
  --dark-gray: #666666;
  --gray: #A2A2A2;
  --light-gray: #CCCCCC;
  --black-gradient: linear-gradient(to bottom, #666666, #F5F5F5, #F5F5F5) 0% 50%;
  --white-gradient: linear-gradient(90deg, rgba(16,52,148,1) 0%, rgba(245,245,245,1) 50%, rgba(16,52,148,1) 100%);
  --blue-gradient: linear-gradient(90deg, rgba(255,255,255,0) 0%, rgba(16,52,148,1) 50%, rgba(255,255,255,0) 100%);
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;   
}

*::-webkit-scrollbar {
  width: 17px;   
}

*::-webkit-scrollbar-track {
  background: var(--dark-blue);  
}

*::-webkit-scrollbar-thumb {
  background-color: var(--background-white);
  border-radius: 100vw;
  border: 3px solid var(--dark-blue);  
}

::-webkit-scrollbar-thumb:hover {
  background-color: var(--light-orange);
}

html {
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
}

html, body {
  max-width: 100vw;
  overflow-x: hidden;
}

/* Global DOM Styles */
main {
  display: grid;
  grid-template-rows: 100px 1fr 100px;
  grid-template-columns: 1fr;
  min-height: 100vh;
  background-color: var(--dark-blue);  
}

h1, h4, h5 {
  color: var(--dark-blue);
  text-align: center;
}

h2, h3 {
  color: var(--background-white);
}

p {
  color: var(--black);
}

/* !! Global Class Styles */

/* Page Header Styles */
.pageHeader{
  grid-row: 1;
  grid-column: span 2;
  background-color: var(--background-white);
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  align-content: center;  
  align-items: center;  
}

.pageHeader button{
  border: none;
  background: none;
  flex-grow: 0;
  justify-self: flex-start;
  margin-left: 2em;
}

.backBox {
  justify-self: flex-start;
  margin-left: 2em;
}

.avatarBox {
  display: flex;  
  flex-flow: column nowrap;
  gap: .25em;  
  justify-content: center;
  align-items: center;
  justify-self: flex-end;
  margin-right: 2em;
}

.avatarBox p{
  color: var(--dark-blue);
}

.avatar {
  display: flex;
  width: 35px;
  height: 35px;    
  justify-content: center;
  align-items: center;
}

.avatar img {
  max-width: 100%;
  height: auto;  
}

/* Global Card Styles */
.inputForm{
  display: grid;
  gap: 1em;
  margin: 1vw;
  /* align-items: center;
  justify-content: center; */
}

.card{
  display: grid;
  background-color: var(--background-white);
  border-radius: 1em;
  padding: .75em;    
}

.card header {
  background-color: var(--dark-blue);
  width: 100%;
  border-radius: .5em .5em 0 0;
  padding: .25em;
  text-align: center;
  margin-bottom: .5em;
  max-height: 31px;
}

.card h4 {
  justify-self: flex-start;
  margin-block: 1em 0em;
}

.small{  
  font-size: .65em;  
  align-self: center;
}

.hidden {
  display: none !important;
}

.radioGroup {
  accent-color: var(--dark-blue);
  display: flex;    
  gap: 1em;    
  border: none;
  background-color: rgba(0, 0, 0, 0.10);
  padding: .5em;
  border-radius: .5em;
  align-self: center;
  font-size: 11px;
  width: 100%;
}

.radioGroup div {
  display: flex;
  flex-flow: column nowrap;
  margin: auto;
}

.checkboxGroup {
  margin: 10px 0;
}

.reliteGroup {
  border: none;
  background-color: rgba(0, 0, 0, 0.10);
  padding: .5em;
  border-radius: .5em;
  align-self: center;
  width: 100%;
  margin-bottom: 1em;
}

.start{
  align-self: flex-start;
}

.alignTop {
  align-items: flex-start !important;
}

.alignBottom {
  align-items: flex-end !important;
}

.center{
  align-self: center !important;
  justify-self: center !important;  
  text-align: center !important;  
}

.cardInput {
  display: flex;
  flex-flow: column nowrap;
  justify-content: center; 
  gap: .25em;
  padding: .25em;
}

.cardInput:has(button.icon) {
  min-height: 64px;
}

.cardInput:has(label.offOnTablet), .cardInput:has(label.offOnDesktop) {
  min-height: 36px;
}

.cardInput label, .cardLabel {  
  align-items: flex-end;
  justify-content: space-between;
  display: flex;
  min-height: 30px;
}

.cardButton {
  display: flex;
  flex-flow: column nowrap;
  justify-content: center; 
  gap: .25em;
}

.projInput{
  flex-flow: row nowrap;
  align-items: center;
  gap: 1em;
}

.cardRow{
  display: flex;
  flex-flow: row nowrap;
  justify-content: center; 
  gap: .25em;
  padding: .25em; 
}

.cardRow input{
  line-height: 1.75em;
  border-radius: .25em;
  border: none;
  outline: 1px solid var(--black);
  padding-left: .25em;
}

.cardRow input:focus{
  outline: 1px solid var(--orange);
}


input[type='text'] {
  line-height: 1.75em;
  border-radius: .25em;
  border: none;
  outline: 1px solid var(--dark-gray);  
  padding-left: .25em;
  transition: all .3s ease;
}

input[type='text']:focus {
  outline: 1px solid var(--blue);  
}

input[type='text']:disabled {
  color: var(--dark-gray);
  background-color: var(--light-gray);
}

input[type='checkbox']:disabled + label {
  color: var(--dark-gray);
}

select {  
  height: 1.75em;    
  border-radius: .25em;
  border: none;
  outline: 1px solid var(--dark-gray);  
  padding-left: .25em;
  transition: all .3s ease;
}

select:disabled {
  color: var(--dark-gray);
  background-color: var(--light-gray);
}

select option:disabled {
  color: var(--dark-gray);
  background-color: var(--light-gray); ;
}

.checkRow{
  font-size: .75em;
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  gap: 1em;  
  align-self: center;  
  accent-color: var(--dark-blue);
  margin-left: 0.25em;
}

.divider {
  margin-block: .5em;  
  height: 1px;
  background: var(--blue-gradient);
}

.divider.white {
  margin-block: .5em;  
  height: 1px;
  background: var(--white-gradient);
}

.spacer {
  margin-top: 10px;
}

.column{
  flex-flow: row nowrap;
  align-items: center;
  justify-content: center;
  justify-self: center;
}

.column input, .column input:focus{  
  outline: none;
}

.tabsContainer {
  width: 100%;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* Internet Explorer 10+ */
}

.tabsContainer::-webkit-scrollbar {
  display: none; /* WebKit */
}

.tabList {
  display: flex;
  border-bottom: 1px solid var(--dark-gray);
  min-width: max-content;
  gap: 4px;
}

.tab {
  padding: 8px 16px;
  border: 1px solid var(--dark-gray);
  border-radius: .25em .25em 0 0;
  background: var(--background-disabled);
  cursor: pointer;
  color: var(--dark-gray);  
  font-size: 14px;
  font-weight: 600;
  white-space: nowrap;
  flex-shrink: 0;
  margin-bottom: -1px;
}

.activeTab {
  border-bottom: none;
  background: var(--background-white);
  color: var(--dark-blue);  
  cursor: default;
}

.tabContent {
  padding-top: 16px;
  border-width: 1px;
  border-style: solid;
  border-image: var(--black-gradient);
  border-top: 0;
}

.activeRow {
  background-color: var(--background-disabled);
  border: 1px solid var(--light-gray);
  border-radius: 4px;
}

/* Global Button Classes */
button.addRow {
  width: 5em;
  min-height: 30px;
  max-height: 42px;
  margin: 0.25em;
  padding: 0.5em;
}

button.deleteRow {
  margin: 2px;
}

.iconPrim{  
  background-color: none;
  color: var(--dark-blue);  
  transition: all .3s ease;
  font-size: 1.5em;
}

.iconPrim:hover{  
  background-color: none;
  color: var(--light-blue);  
}

.icon {
  border-color: transparent;  
  width: 2em;
  height: 2em;
  font-size: 1em;
  border-radius: .5em;
  justify-self: flex-end; 
  align-self: flex-end; 
  background: none;   
  transition: all .3s ease;
}

.icon.blue {
  color: var(--dark-blue);    
}

.icon.blue:hover {  
  background-color: var(--dark-blue);
  color: var(--background-white); 
}

.icon.red {  
  color: var(--red);    
}

.icon.red:hover {  
  background-color: var(--red);
  color: var(--background-white); 
}

.iconReject{  
  color: var(--light-red);
  margin-bottom: .5em;    
}

.iconReject:hover{  
  background-color: var(--red);
  color: var(--background-white); 
}

.iconClear{  
  color: var(--light-red);    
}

.iconClear:hover{  
  background-color: var(--red);
  color: var(--background-white); 
}

.button {
  cursor: pointer;
  border: none;
  border-radius: .5em;
  padding: 1em;  
  text-decoration: none;
}

button.small {
  width: 5em;
  padding: 0.25em;
}

.prim{  
  background-color: var(--dark-blue);
  color: var(--background-white);
  transition: all .3s ease;
}

.prim:hover{
  background-color: var(--light-blue);
}

.sec{
  background-color: var(--light-blue);
  color: var(--background-white);
  transition: all .3s ease;
}

.sec:hover{
  background-color: var(--dark-blue);
}

.note {
  background-color: var(--blue);
  color: var(--background-white);
  transition: all .3s ease;
}

.note:hover {
  background-color: var(--light-blue);
}

.delete {
  background-color: var(--red);
  color: var(--background-white);
  transition: all .3s ease;
}

.delete:hover {
  background-color: var(--light-red);
}

.archive {
  background-color: var(--gray);
  color: var(--background-white);
  transition: all .3s ease;
}

.archive:hover {
  background-color: var(--light-gray);
}

.accent{  
  background-color: var(--orange);
  color: var(--background-white);
  transition: all .3s ease;
}

.accent:hover{
  background-color: var(--light-orange);
}

button.success {  
  background-color: var(--green);
  color: var(--background-white);
  transition: all .3s ease;
}

button.success:hover{
  background-color: var(--light-green);
}

.reject{  
  background-color: var(--red);
  color: var(--background-white);
  transition: all .3s ease;
}

.reject:hover{
  background-color: var(--light-red);
}

.nuetral{  
  background-color: var(--gray);
  color: var(--background-white);
  transition: all .3s ease;
}

.nuetral:hover{
  background-color: var(--light-gray);
}

/* Global Dialog Styles */

.dialog-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
}

.dialog-content {
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  gap: .75em;
  background-color: var(--background-white);
  color: var(--black);
  padding: 1em 3em 3em 3em;
  border-radius: 10px;
}

.dialog-content ul {
  display: flex;
  gap: .75em;
  list-style-type: none;
}

.dialog-title {
  text-align: center;
}

.dialog-buttons {
  display: flex;
  width: 100%;
  justify-content: space-around;
}

/* Global Card Styles */

.backButton {
  color: var(--dark-blue);
  align-self: flex-start;
  font-size: 1.5em;  
}

.image {
  width: 50vw;
  max-width: 280px;
  min-width: 200px;
  height: auto;
}

.panelImage {
  align-self: center;
  height: auto;    
  width: 90%;
  max-width: 280px;    
  justify-self: center;
}

/* Global Utility Styles */

.black{
  color: var(--black);
}

.white{
  color: var(--background-white);
}

.projectCard{  
  display: grid;
  background-color: var(--background-white);
  align-content: center;  
  justify-items: center;
  gap: 1em;
  justify-self: center;
  align-self: center;  
  flex-grow: 0;
  /* width: 25em; */
  border-radius: 1em;
  padding: .75em;    
}

/* Building Sketch Styles */
.sketchButtonContainer{  
  display: flex;  
  width: 100%;  
  justify-content: space-between;
  margin-top: 10px;
}

.sketchButton {
  aspect-ratio: 1 /1;
  padding: .35em;  
  border: none;
  background-color: var(--dark-blue);
  border-radius: .25em;
  border: var(--background-white);
  color: var(--background-white);
  min-width: 38px;
}

/* Hides the autocomplete google logo */
.pac-container:after {
  background-image: none !important;
  height: 0px;
}

/* Grid Layout */
.grid, .grid2, .grid3, .grid4, .grid6, .grid8, .tableGrid5, .tableGrid6, .tableGrid7, .tableGrid8, .tableGrid9, .tableGrid10 {
  display: grid;
  grid-template-columns: 1fr;  
  gap: 0 .5em;
  align-items: flex-end;
  justify-content: center;
}

.span2, .span3, .span4, .span5, .span6, .span7, .span8 {
  grid-column: span 1;
}

.panelGrid {
  display: grid;
  grid-template-columns: 1fr;  
  grid-template-rows: repeat(5, 1fr);  
  gap: 0 .5em;
  align-items: flex-end;
  justify-content: center;
}

.panelGrid .panelType {
  grid-column: 1;
  grid-row: 3;
}

.panelGrid .panelGauge {
  grid-column: 1;
  grid-row: 4;
}

.panelGrid .panelFinish {
  grid-column: 1;
  grid-row: 5;
}

.panelGrid .panelImage {
  grid-column: 1;
  grid-row: 1 / 3;
}

.panelGrid:has(div.openWall) {
  grid-template-rows: 1fr;  
}

.sliderLeftButton {
  font-size: 15px;
  padding: 2px;
  border: 1px solid var(--dark-gray);
  border-radius: 5px 0 0 5px;
  color: var(--background-white);
  align-self: flex-end;
  background: var(--light-gray);
  aspect-ratio: 1 /1;
  width: 28px;
}

.sliderRightButton {
  font-size: 15px;
  padding: 2px;
  border: 1px solid var(--dark-gray);
  border-radius: 0 5px 5px 0;
  color: var(--background-white);
  align-self: flex-end;
  background: var(--light-gray);
  aspect-ratio: 1 /1;
  width: 28px;
}

.sliderGrid {
  display: grid;
  grid-template-columns: 28px minmax(60px, 1fr) 28px;  
  gap: 0;
  /* align-items: flex-end; */
}

.sliderGrid div {
  padding: 0;
  min-height: unset;
}

.sliderGrid label {
  display: block;
  text-align: center;
  min-height: unset;
}

.sliderGrid input {
  border-radius: 0 !important;
  text-align: center;
  height: 26px;
}

.sliderGrid.blue input {
  height: 28px;
}

.sliderGrid.blue button {
  border: 1px solid var(--light-blue);
}

.sliderGrid.blue button:disabled {
  border: 1px solid var(--background-white);
}

.onPhone, .onTablet, .onLaptop, .onDesktop, .hideWithSidebar {
  display: none;
}

/* END */


/*
.showWithSidebar, .hideWithSidebar = 1000px

.onPhone,   .offOnPhone   =  550px
.onTablet,  .offOnTablet  =  768px
.onLaptop,  .offOnLaptop  = 1200px
.onDesktop, .offOnDesktop = 1500px
*/
@media screen and (min-width: 350px) {
  .cardInput label, .cardInput input, .cardInput select, .cardRow label, .cardRow input, .cardRow select{
    font-size: 3.15vw;
  }

  .radioGroup{
    font-size: 3.15vw;
  }

  .sliderGrid input {
    font-size: 15px;
  }
}


@media screen and (min-width: 476px) {
  .radioGroup{
    font-size: 15px;
  }
}


@media screen and (min-width: 550px) {
  .offOnPhone {
    display: none !important;
  }

  .onPhone {
    display: block;
  }

  .pageHeaderLeft {
    font-size: 1.25em;      
  }

  .pageHeaderRight {
    font-size: .75em;
  }

  .cardInput label, .cardInput input, .cardInput select, .cardRow label, .cardRow input, .cardRow select{
    font-size: 15px;
  }

  /* Grid Layout */
  .grid2 {
    grid-template-columns: repeat(2, 1fr);
  }

  .grid2 .span2 {
    grid-column: span 2;
  }

  .grid2:has(.panelGrid) {
    grid-template-columns: 1fr;  
  }

  .grid2 .grid2 {
    grid-template-columns: 1fr;  
  }

  .grid2 .grid2 .span2 {
    grid-column: span 1;
  }

  .grid4 {
    grid-template-columns: repeat(2, 1fr);  
  }

  .grid4:has(.panelGrid) {
    grid-template-columns: 1fr;  
  }

  .grid4 .span2, .grid4 .span3 {
    grid-column: span 1;
  }

  .grid4 .divider.span2, .grid4 .divider.span3 {
    grid-column: span 2;
  }

  .tableGrid5 {
    grid-template-columns: repeat(2, 1fr);  
  }

  .tableGrid5 .span2 {
    grid-column: span 2;
  }

  .grid6 {
    grid-template-columns: repeat(2, 1fr);  
  }

  .tableGrid6 {
    grid-template-columns: repeat(2, 1fr);  
  }

  .grid6 .span2, .grid6 .span4, .grid6 .span5 {
    grid-column: span 2;
  }

  .tableGrid7 {
    grid-template-columns: repeat(2, 1fr);  
  }

  .tableGrid7 .span2 {
    grid-column: span 2;
  }

  .grid8 {
    grid-template-columns: repeat(2, 1fr);  
  }

  .tableGrid8 {
    grid-template-columns: repeat(2, 1fr);  
  }

  .tableGrid10 {
    grid-template-columns: repeat(3, 1fr);  
  }

  .tableGrid10 .span3 {
    grid-column: span 3;
  }

  .grid8 .span5, .grid8 .span6, .grid8 .span7 {
    grid-column: span 2;
  }
}


@media screen and (min-width: 768px) {
  .offOnTablet {
    display: none !important;
  }

  .onTablet {
    display: block;
  }

  /* Grid Layout */
  .grid3 {
    grid-template-columns: repeat(3, 1fr);
  }

  .grid3 .span2 {
    grid-column: span 2;
  }

  .grid4 .divider.onTablet {
    grid-column: span 2;
  }

  .grid4:has(.panelGrid) {
    grid-template-columns: repeat(2, 1fr); 
  }

  .tableGrid5 {
    grid-template-columns: repeat(4, minmax(60px, 1fr)) 30px;
  }

  .tableGrid5 .span2 {
    grid-column: span 1;
  }

  .grid6 {
    grid-template-columns: repeat(6, minmax(60px, 1fr));  
  }

  .grid6 div, .grid6 .span2 {
    grid-column: span 2;
  }

  .tableGrid6 {
    grid-template-columns: repeat(5, minmax(60px, 1fr)) 30px;
  }

  .grid6 .span3 {
    grid-column: span 3;
  }

  .grid6 .span4 {
    grid-column: span 4;
  }

  .grid6 .span5 {
    grid-column: span 6;
  }

  .tableGrid7 {
    grid-template-columns: repeat(6, minmax(60px, 1fr)) 30px;
  }

  .tableGrid7 .span2 {
    grid-column: span 1;
  }

  .panelGrid {
    display: grid;
    grid-template-columns: 1fr 1fr 2fr;  
    grid-template-rows: 1fr 1fr;  
    gap: 0 .5em;
    align-items: flex-end;
    justify-content: center;
  }
  
  .panelGrid .panelType {
    grid-column: 1 / span 2;
    grid-row: 1;
  }
  
  .panelGrid .panelGauge {
    grid-column: 1;
    grid-row: 2;
  }
  
  .panelGrid .panelFinish {
    grid-column: 2;
    grid-row: 2;
  }
  
  .panelGrid .panelImage {
    grid-column: 3 / 4;
    grid-row: 1 / 3;
  }

  .grid4 .panelGrid {
    display: grid;
    grid-template-columns:  minmax(60px, 1fr);  
    grid-template-rows: repeat(5, 1fr);  
    gap: 0 .5em;
    align-items: flex-end;
    justify-content: center;
  }
    
  .grid4 .panelGrid .panelType {
    grid-column: 1;
    grid-row: 3;
  }
    
  .grid4 .panelGrid .panelGauge {
    grid-column: 1;
    grid-row: 4;
  }
    
  .grid4 .panelGrid .panelFinish {
    grid-column: 1;
    grid-row: 5;
  }
    
  .grid4 .panelGrid .panelImage {
    grid-column: 1;
    grid-row: 1 / 3;
  }
}


@media screen and (min-width: 1000px) {
  main{
    grid-template-columns: 350px 1fr;
    grid-template-rows: 100px 1fr;    
  }

  .hideWithSidebar {
    display: block;
  }

  .showWithSidebar {
    display: none !important;
  }

  .inputForm{
    margin-right: .5em;
  }

  /* Grid Layout */
  .grid4 {
    /*grid-template-columns: repeat(4, 1fr);*/
    grid-template-columns: repeat(4, minmax(140px, 1fr));
  }

  .grid4 .grid {
    grid-template-columns: minmax(140px, 1fr);
  }

  .grid4:has(.panelGrid) {
    grid-template-columns: repeat(2, 1fr); 
  }

  .grid4 .span2 {
    grid-column: span 2;
  }

  .grid4 .span3 {
    grid-column: span 3;
  }
}


@media screen and (min-width: 1200px) {
  .offOnLaptop {
    display: none !important;
  }

  .onLaptop {
    display: block;
  }

  /* Grid Layout */
  .grid2:has(.panelGrid) {
    grid-template-columns: repeat(2, 1fr); 
  }

  .grid2 .grid2 {
    grid-template-columns: repeat(2, 1fr);  
  }

  .grid2 .grid2 .span2 {
    grid-column: span 2;
  }

  .tableGrid5 {
    grid-template-columns: repeat(4, minmax(80px, 1fr)) 30px;
  }

  .grid6 {
    /*grid-template-columns: repeat(6, 1fr);*/
    grid-template-columns: repeat(6, minmax(80px, 1fr));
  }

  .grid6 div {
    grid-column: span 1;
  }

  .tableGrid6 {
    grid-template-columns: repeat(5, minmax(80px, 1fr)) 30px;
  }

  .grid6 .span2 {
    grid-column: span 2;
  }

  .grid6 .span3 {
    grid-column: span 3;
  }

  .grid6 .span4 {
    grid-column: span 4;
  }

  .grid6 .span5 {
    grid-column: span 5;
  }

  .tableGrid7 {
    grid-template-columns: repeat(6, minmax(80px, 1fr)) 30px;
  }

  .grid8 {
    /*grid-template-columns: repeat(4, 1fr);*/
    grid-template-columns: repeat(4, minmax(180px, 1fr));
  }

  .tableGrid8 {
    grid-template-columns: repeat(4, minmax(180px, 1fr));
  }

  .tableGrid9 {
    grid-template-columns: repeat(5, minmax(120px, 1fr));
  }

  .tableGrid10 {
    grid-template-columns: repeat(5, minmax(120px, 1fr));
  }

  .tableGrid10 .span6 {
    grid-column: span 2;
  }

  .tableGrid10 .span3 {
    grid-column: span 1 !important;
  }

  .grid8 .span2 {
    grid-column: span 1;
  }

  .grid8 .span3, .grid8 .span4 {
    grid-column: span 2;
  }

  .grid8 .span5, .grid8 .span6 {
    grid-column: span 3;
  }

  .grid8 .span7 {
    grid-column: span 4;
  }
}


@media screen and (min-width: 1500px) {
  .offOnDesktop {
    display: none !important;
  }

  .onDesktop {
    display: block;
  }

  /* Grid Layout */
  .grid4:has(.panelGrid) {
    grid-template-columns: repeat(4, minmax(140px, 1fr));
  }

  .grid8 {
    /*grid-template-columns: repeat(8, 1fr);*/
    grid-template-columns: repeat(8, minmax(120px, 1fr));
  }

  .tableGrid8 {
    grid-template-columns: repeat(7, minmax(120px, 1fr)) 30px;
  }

  .tableGrid9 {
    grid-template-columns: repeat(8, minmax(20px, 1fr)) 30px;
  }

  .tableGrid9 .span2 {
    grid-column: span 1;
  }

  .tableGrid10 {
    grid-template-columns: repeat(9, minmax(20px, 1fr)) 30px;
  }

  .span2 {
    grid-column: span 2 !important;
  }

  .span3 {
    grid-column: span 3 !important;
  }

  .span4 {
    grid-column: span 4 !important;
  }

  .span5 {
    grid-column: span 5 !important;
  }

  .span6 {
    grid-column: span 6 !important;
  }

  .span7 {
    grid-column: span 7 !important;
  }

  .span8 {
    grid-column: span 8 !important;
  }

  .tableGrid5 .span2 {
    grid-column: span 1 !important;
  }

  .tableGrid7 .span2 {
    grid-column: span 1 !important;
  }

  .tableGrid9 .span2 {
    grid-column: span 1 !important;
  }
}
